<Window x:Class="TestingProgram.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestingProgram"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        Title="Testing" Height="800" Width="1080" ResizeMode="CanResize"  Background="#FFFAFAFA"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto" WindowStartupLocation="CenterScreen">


    <!--<Window.Resources>
        <ResourceDictionary>
           
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 0 8 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type materialDesign:PackIcon}" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="4 0 4 0" />
                <Setter Property="Width" Value="40" />
                <Setter Property="Height" Value="40" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>-->

    <!--<Window.Resources>
        
    <ControlTemplate x:Key="ModifiedErrorTemplate">
            <ControlTemplate.Resources>
                <DataTemplate DataType="{x:Type ValidationError}">
                    <TextBlock Foreground="{DynamicResource ValidationErrorBrush}"
                           MaxWidth="{Binding ElementName=Placeholder, Path=ActualWidth}"
                           HorizontalAlignment="Left"
                           Margin="2"
                           TextWrapping="Wrap"
                           Text="{Binding ErrorContent}"
                           UseLayoutRounding="false" />
                </DataTemplate>
            </ControlTemplate.Resources>
        </ControlTemplate>
   
        <Style x:Key="ExtendedMaterialDesignComboBox"
               BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}"
               TargetType="ComboBox">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ModifiedErrorTemplate}" />
        </Style>
        
    </Window.Resources>-->

    <!--<Window.Resources>
        <Style x:Key="ExtendedMaterialDesignComboBox" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                     
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>-->

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Background="#FFFAFAFA" x:Name="MainGrid">
        <materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}" Background="#FF787878">
            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}" BottomDrawerBackground="{x:Null}" LeftDrawerBackground="{x:Null}" RightDrawerBackground="{x:Null}" TopDrawerBackground="{x:Null}">
                     
                    <!--#region LEFTPANEL-->
                <materialDesign:DrawerHost.LeftDrawerContent>

                    
                    <DockPanel MinWidth="300" Background="{StaticResource DarkGray}" Width="298" >
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Left" Margin="17.5"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" Foreground="{StaticResource LightGray}" Width="25" Height="25"/>

                        <Grid x:Name="Panel"/>



                    </DockPanel>
                  

                </materialDesign:DrawerHost.LeftDrawerContent>
                <!--#endregion-->
                
                <DockPanel>

                    <!--#region  HEAD_PANEL-->
                    <materialDesign:ColorZone x:Name="ColorZone"  materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                           DockPanel.Dock="Top"
                                           Background="{StaticResource DarkGray}" Height="60" >
                        <!--<Grid>
                        <TextBlock Style="{StaticResource BaseTextLightH2}" HorizontalAlignment="Center" VerticalAlignment="Center">1/10</TextBlock>
                    </Grid>-->
                       
                        <materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect ExpandIn, Duration=0:0:1}">

                            <Grid x:Name="Head">
                                <ToggleButton  Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton" Foreground="{StaticResource LightGray}" HorizontalAlignment="Left" Width="30" Height="30" Margin="15,0,0,0"/>

                                <Grid x:Name="HeadLabelName">
                                </Grid>

                                <Button VerticalAlignment="Center" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Width="33" Height="33" Margin="0,12,12,12" Background="{x:Null}" BorderBrush="{x:Null}">
                                    <materialDesign:PackIcon Style="{StaticResource BaseIcon}" Kind="ExitToApp"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Button>
                                
                                <!--<Button Background="{x:Null}" BorderBrush="{x:Null}" Foreground="LightGray" materialDesign:RippleAssist.IsDisabled="False" Width="40" Height="40" Margin="0,0,17.5,0" HorizontalAlignment="Right" VerticalAlignment="Center" >
                                    <materialDesign:PackIcon Kind="ExitToApp" Width="30" Height="30"/>
                                </Button>-->

                            </Grid>
                        </materialDesign:TransitioningContent>
                      

                    </materialDesign:ColorZone>
<!--#endregion HEADPANEL-->

                    <Grid x:Name="CenterGrid"/>



                    <!--#region TESTING_WINDOW-->
                    <!--<DockPanel Margin="0"  LastChildFill="False">
                        <TextBox
    Style="{StaticResource MaterialDesignOutlinedTextFieldTextBox}"
    Margin="20"
    VerticalAlignment="Center"
    Height="100"
    AcceptsReturn="True"
    TextWrapping="Wrap"
    VerticalScrollBarVisibility="Auto"
    materialDesign:HintAssist.Hint="This is a text area"
    IsEnabled="{Binding Path=IsChecked, ElementName=MaterialDesignOutlinedTextFieldTextBoxEnabledComboBox}" DockPanel.Dock="Top" />
                        --><!--<TextBox TextWrapping="WrapWithOverflow" Style="{StaticResource BaseTextDarkH3}" Margin="20" HorizontalAlignment="Left" DockPanel.Dock="Top">Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:</TextBox>--><!--
                        <avalonEdit:TextEditor Margin="20,0,20,20"  MinHeight="16" MaxHeight="200"
                    ShowLineNumbers="True"
				Name="textEditor"
				FontFamily="Consolas"
				FontSize="10pt"
				SyntaxHighlighting="C#"
                                            HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Background="#FFFAFAFA" DockPanel.Dock="Top"
			>Welcome to AvalonEdit!

                        </avalonEdit:TextEditor>

                        <StackPanel Style="{StaticResource BaseTextDarkH3}" Margin="0,20,0,0" HorizontalAlignment="Left" DockPanel.Dock="Top" >
                            <CheckBox Margin="20,0,20,6">
                                <TextBlock TextWrapping="WrapWithOverflow">
                               public   public   public   public   public      public   public   public   public   public   public   public   public   public   publicpublic   public   public   public
                                </TextBlock>
                            </CheckBox>
                            <CheckBox Margin="20,0,20,6">
                                internal
                            </CheckBox>
                            <CheckBox Margin="20,0,20,6">
                                private
                            </CheckBox>
                            <CheckBox Margin="20,0,20,6">
                                public
                            </CheckBox>
                        </StackPanel>


                        <Button HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,20,20,20" DockPanel.Dock="Bottom" Height="31.6" Click="Button_Click_2" >NEXT</Button>

                    </DockPanel>-->
<!--#endregion--> 
                    
                    
                    <!--#region Transitioner-->
                    <!--<materialDesign:Transitioner SelectedIndex="0" AutoApplyTransitionOrigins="True">
                    <materialDesign:Transitioner.InputBindings>
                        <KeyBinding Key="Right" Command="{x:Static materialDesign:Transitioner.MoveNextCommand}" />
                    </materialDesign:Transitioner.InputBindings>

                    -->
                    <!-- you can use a slide for each page, let's add a touch of fade for our first page  -->
                    <!--<materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect FadeIn}">-->
                    <!--
                        <local:Slide1_Intro Margin="0,0,0,0.4" />
                    -->
                    <!--</materialDesign:TransitionerSlide>-->

                    <!-- but you can use bare xaml too -->
                    <!--
                    <local:Slide2_Intro />
     <local:Slide1_Intro Margin="0,0,0,0.4" />
                    -->
                    <!-- you can control (and create your own) wipes -->
                    <!--<materialDesign:TransitionerSlide>
                        <materialDesign:TransitionerSlide.BackwardWipe>
                            <materialDesign:CircleWipe />
                        </materialDesign:TransitionerSlide.BackwardWipe>
                        <materialDesign:TransitionerSlide.ForwardWipe>
                            <materialDesign:SlideWipe Direction="Right" />
                        </materialDesign:TransitionerSlide.ForwardWipe>-->
                    <!--<local:Slide3_Intro />-->
                    <!--</materialDesign:TransitionerSlide>-->

                    <!-- now we are going to slide this in by combining some extra effects.  the inner content slides in, so we'll set the outer background and clip, to keep things nice -->
                    <!--<materialDesign:TransitionerSlide Background="{DynamicResource MaterialDesignDarkBackground}"
                                              Foreground="{DynamicResource MaterialDesignDarkForeground}"
                                              ClipToBounds="True">
                        <materialDesign:TransitionerSlide.OpeningEffects>
                            <materialDesign:TransitionEffect Kind="SlideInFromLeft" Duration="0:0:0.8" />
                            <materialDesign:TransitionEffect Kind="SlideInFromBottom" Duration="0:0:0.8" OffsetTime="0:0:0.15" />
                        </materialDesign:TransitionerSlide.OpeningEffects>-->
                    <!--<local:Slide4_CombineTransitions />-->
                    <!--</materialDesign:TransitionerSlide>-->

                    <!--<local:Slide5_TransitioningContent />

                    <local:Slide6_Origins />

                    <local:Slide7_MVVM />-->
                    <!--

                </materialDesign:Transitioner>-->
                    <!--#endregion-->

                </DockPanel>

            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>

    </Grid>
</Window>











<!--<materialDesign:Flipper HorizontalAlignment="Center" VerticalAlignment="Center" 
  >
                        <materialDesign:Flipper.FrontContent>
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                                <TextBlock   Style="{StaticResource BaseTextDarkH1}" VerticalAlignment="Center" Height="24" FontSize="24" HorizontalAlignment="Center">Admin</TextBlock>

                                <Button  Height="24" Width="24" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="LightGray" VerticalAlignment="Center" materialDesign:RippleAssist.IsDisabled="True" Margin="8,0,0,0"  Command="{x:Static materialDesign:Flipper.FlipCommand}">
                                    <materialDesign:PackIcon Kind="Edit" Width="Auto" Height="Auto" HorizontalAlignment="Left" Foreground="{StaticResource D}"/>
                                </Button>


                    <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar"
                                            Grid.Row="1" />-->




<!--<materialDesign:Flipper HorizontalAlignment="Center" VerticalAlignment="Center" 
  >
                            <materialDesign:Flipper.FrontContent>
                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock   Style="{StaticResource BaseTextLightH2}" VerticalAlignment="Center" Height="24" FontSize="24" HorizontalAlignment="Center">Admin</TextBlock>

                                    <Button  Height="24" Width="24" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="LightGray" VerticalAlignment="Center" materialDesign:RippleAssist.IsDisabled="True" Margin="8,0,0,0">
                                        <materialDesign:PackIcon Kind="Edit" Width="Auto" Height="Auto" HorizontalAlignment="Left"/>
                                    </Button>
                                </StackPanel>
                            </materialDesign:Flipper.FrontContent>
                            <materialDesign:Flipper.BackContent>
                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock   Style="{StaticResource BaseTextLightH2}" VerticalAlignment="Center" Height="24" FontSize="24" HorizontalAlignment="Center">Admin</TextBlock>

                                    <Button  Height="24" Width="24" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="LightGray" VerticalAlignment="Center" materialDesign:RippleAssist.IsDisabled="True" Margin="8,0,0,0">
                                        <materialDesign:PackIcon Kind="Check" Width="Auto" Height="Auto" HorizontalAlignment="Left"/>
                                    </Button>
                                </StackPanel>
                            </materialDesign:Flipper.BackContent>
                        </materialDesign:Flipper>-->


<!--<ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"                         
                             ItemsSource="{Binding DemoItems}"
                             >-->






<!--<ListBox.ItemTemplate>
                            <DataTemplate DataType="domain:DemoItem">
                                <TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>-->
<!--</ListBox>-->



<!--<StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                                    -->
<!--<TextBox   Style="{StaticResource BaseTextLightH2}" VerticalAlignment="Center" Height="24" FontSize="24" HorizontalAlignment="Center">Admin</TextBox>-->
<!--
                                    <TextBox Background="{StaticResource LightGray}" Style="{StaticResource BaseTextLightH2}" Height="20"

  materialDesign:HintAssist.Hint="Comment" >Admin</TextBox>
                                        <Button   Command="{x:Static materialDesign:Flipper.FlipCommand}" Height="20" Width="20" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="LightGray" VerticalAlignment="Center" materialDesign:RippleAssist.IsDisabled="True" Margin="8,0,0,0">
                                        <materialDesign:PackIcon Kind="Check" Width="20" Height="20" HorizontalAlignment="Left"/>
                                    </Button>
                                </StackPanel>-->
                    