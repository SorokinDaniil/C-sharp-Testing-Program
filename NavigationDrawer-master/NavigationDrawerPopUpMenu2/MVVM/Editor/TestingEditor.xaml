<Window x:Class="TestingProgram.TestingEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TestingProgram"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             Title="Testing" Height="800" Width="1080"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto" WindowStartupLocation="CenterScreen" Background="White" WindowStyle="None" ResizeMode="NoResize">
    <Grid>
        <DockPanel>

            <!--#region  HEAD_PANEL-->
            <materialDesign:ColorZone x:Name="ColorZone"  materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                           DockPanel.Dock="Top"
                                        Mode="PrimaryMid" Height="60" >
                <!--<Grid>
                        <TextBlock Style="{StaticResource BaseTextLightH2}" HorizontalAlignment="Center" VerticalAlignment="Center">1/10</TextBlock>
                    </Grid>-->

                <materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect ExpandIn, Duration=0:0:1}">

                    <DockPanel x:Name="Head" >

                        <!--<Grid x:Name="HeadLabelName">
                        </Grid>-->

                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}"  materialDesign:RippleAssist.IsDisabled="False" VerticalAlignment="Center" HorizontalAlignment="Right" Width="25" Height="25" Margin="17.5,0,16,0" Command="{Binding SaveQuestion}" CommandParameter="{Binding ElementName=ComboBoxChangeAnswer, Path=SelectionBoxItem}">
                            <materialDesign:PackIcon Kind="ContentSave" Width="24" Height="24"/>
                        </Button>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center"  FontSize="20" Margin="0,0,16,0">Код</TextBlock>
                        <ToggleButton x:Name="ChangeVisabilityCodeBlock"
  Style="{StaticResource MaterialDesignSwitchToggleButton}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,16,0" IsChecked="{Binding IsCheckCodeQuestion}" Command="{Binding ChangeVisabilityCodeBoxCommand}"
   />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center"  FontSize="20" Margin="0,0,16,0">Тип ответа</TextBlock>
                        <ComboBox  x:Name="ComboBoxChangeAnswer" HorizontalAlignment="Left" VerticalAlignment="Center" MinWidth="100" Margin="0,0,16,0" SelectedIndex="{Binding SelectedIndexChangeAnswer}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding ChangeTypeAnswerCommand}" CommandParameter="{Binding ElementName=AnswerBlock}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ComboBoxItem>
                               CheckBox
                            </ComboBoxItem>
                            <ComboBoxItem>
                                RadioButton
                            </ComboBoxItem>
                        </ComboBox>
                        
                        <!--<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20">1/10</TextBlock>
                        
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center"  FontSize="20" Margin="16,0">Время</TextBlock>
                     
                        <materialDesign:TimePicker
  materialDesign:HintAssist.Hint="With Seconds"
  Is24Hours="True"
  x:Name="WithSecondsTimePicker"
  Width="100" />-->
                        
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}"  materialDesign:RippleAssist.IsDisabled="False" VerticalAlignment="Center" HorizontalAlignment="Right" Width="25" Height="25" Margin="0,0,17.5,0" >
                            <materialDesign:PackIcon Kind="Delete" Width="25" Height="25"/>
                        </Button>

                    </DockPanel>
                </materialDesign:TransitioningContent>


            </materialDesign:ColorZone>
            <!--#endregion HEADPANEL-->





            <DockPanel Margin="0"  LastChildFill="False">

                <TextBox  AcceptsReturn="True"   TextWrapping="Wrap"  MaxLength="670" Height="109" MinWidth="1040"  Margin="20,40,20,20" HorizontalAlignment="Left" DockPanel.Dock="Top"  FontSize="15" Text="{Binding TextQuestion}"/>
                <avalonEdit:TextEditor Margin="20,0,20,20"  MinHeight="16" MaxHeight="260" Visibility="{Binding CodeBoxVisibility}"
                    ShowLineNumbers="True" 
				Name="textEditor"
				FontFamily="Consolas"
				FontSize="10pt"
				SyntaxHighlighting="C#"
                                            HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Background="#FFFAFAFA" DockPanel.Dock="Top"
			>
                    <i:Interaction.Behaviors>
                        <local:AvalonEditBehaviour GiveMeTheText="{Binding CodeQuestion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </i:Interaction.Behaviors>
                </avalonEdit:TextEditor>

                <StackPanel DockPanel.Dock="Top" x:Name="AnswerBlock">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction Command="{Binding LoadedStackPanel}" CommandParameter="{Binding ElementName=AnswerBlock}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </StackPanel>


                <Button   
                                            CommandParameter="{Binding}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,20,20,20" DockPanel.Dock="Bottom" Height="31.6"  Style="{StaticResource MaterialDesignRaisedButton}"  >СОХРАНИТЬ</Button>

            </DockPanel>




        </DockPanel>
    </Grid>
</Window>

    
                        <!--<CheckBox Margin="20,0,20,6">
                        <ContentControl>
                            <TextBox FontSize="15" MaxLength="204" Width="1017" Height="29">
                            </TextBox>
                        </ContentControl>

                    </CheckBox>
                    <CheckBox Margin="20,0,20,6">
                        <TextBox  FontSize="15" MaxLength="204" Width="1017" Height="29">

                        </TextBox>
                    </CheckBox>
                    <CheckBox Margin="20,0,20,6" >
                        <TextBox  FontSize="15" MaxLength="204" Width="1017" Height="29">

                        </TextBox>
                    </CheckBox>
                    <CheckBox Margin="20,0,20,6">
                        <TextBox  FontSize="15" MaxLength="204" Width="1017" Height="29"  >

                        </TextBox>
                    </CheckBox>-->