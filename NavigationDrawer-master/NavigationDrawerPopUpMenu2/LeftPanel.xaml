<UserControl x:Class="TestingProgram.LeftPanel"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestingProgram"
              xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Height="1000" Width="1000">
    <Grid Background="#FFFAFAFA">
        <materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}" Background="#FF787878">
            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}" BottomDrawerBackground="{x:Null}" LeftDrawerBackground="{x:Null}" RightDrawerBackground="{x:Null}" TopDrawerBackground="{x:Null}">

                <materialDesign:DrawerHost.LeftDrawerContent>

                    <!--#region LEFTPANEL-->
                    <DockPanel MinWidth="300" Background="{StaticResource DarkGray}" >
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                    DockPanel.Dock="Top"
                                    HorizontalAlignment="Left" Margin="17.5"
                                    IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" Foreground="{StaticResource LightGray}" Width="25" Height="25"/>

                        <Grid x:Name="LeftPanel"/>



                    </DockPanel>

                    <!--#endregion-->

                </materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel x:Name="DockMain">

                    <materialDesign:ColorZone x:Name="ColorZone"  materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                           DockPanel.Dock="Top"
                                           Background="{StaticResource DarkGray}" Height="60" >
                        <!--<Grid>
                        <TextBlock Style="{StaticResource BaseTextLightH2}" HorizontalAlignment="Center" VerticalAlignment="Center">1/10</TextBlock>
                    </Grid>-->
                        <!--#region HEAD-->
                        <materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect ExpandIn, Duration=0:0:1}">

                            <Grid x:Name="Head">
                                <ToggleButton  Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton" Foreground="{StaticResource LightGray}" HorizontalAlignment="Left" Width="25" Height="25" Margin="17.5,0,0,0"/>

                                <Grid x:Name="HeadLabelName">
                                </Grid>


                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="LightGray" materialDesign:RippleAssist.IsDisabled="False" VerticalAlignment="Center" HorizontalAlignment="Right" Width="25" Height="25" Margin="0,0,17.5,0" >
                                    <materialDesign:PackIcon Kind="ExitToApp" Width="25" Height="25"/>
                                </Button>

                            </Grid>
                        </materialDesign:TransitioningContent>
                        <!--#endregion-->

                    </materialDesign:ColorZone>

                    <!--#region START_WINDOW-->

                    <!--<materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect ExpandIn, Duration=0:0:1}">

                    <StackPanel x:Name="StartPanel" Margin="20,30">
                        <TextBlock Style="{StaticResource BaseTextDarkH1}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,0,0,30" TextWrapping="Wrap">Переменная</TextBlock>


                        -->
                    <!--<TextBlock Style="{StaticResource BaseTextDarkH3}" TextWrapping="Wrap" Margin="0" Text="   Для хранения данных в программе применяются переменные. Переменная представляет именнованную область памяти, в которой хранится значение определенного типа. Переменная имеет тип, имя и значение. Тип определяет, какого рода информацию может хранить переменная. Перед использованием любую переменную надо определить. Синтаксис определения переменной выглядит следующим образом:" Foreground="{StaticResource DarkGray}" HorizontalAlignment="Left" VerticalAlignment="Center" />-->
                    <!--
                        <StackPanel Margin="0,30,0,0" Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="ClockOutline" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{StaticResource DarkGray}" />
                            <TextBlock  Style="{StaticResource BaseTextDarkH3}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="18" Margin="8,0,0,0" >Time:</TextBlock>
                            <TextBlock  Style="{StaticResource BaseTextDarkH3}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="18" Margin="8,0,0,0" >20:00</TextBlock>
                        </StackPanel>

                        <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="QuestionMarkCircleOutline" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{StaticResource DarkGray}" />
                            <TextBlock  Style="{StaticResource BaseTextDarkH3}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="18" Margin="8,0,0,0" >Question:</TextBlock>
                            <TextBlock  Style="{StaticResource BaseTextDarkH3}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="18" Margin="8,0,0,0" >10</TextBlock>
                        </StackPanel>
                        <Button
 
    Width="100"  Foreground="{StaticResource LightGray}" BorderBrush="{x:Null}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,80,0,0" Height="32"   Command="{x:Static materialDesign:Transitioner.MoveNextCommand}" Background="{StaticResource DarkGray}"
  >
                            START
                        </Button>
                        <ToggleButton Background="{x:Null}"
  Style="{StaticResource MaterialDesignActionToggleButton}"
  ToolTip="MaterialDesignActionLightToggleButton" Width="64" Height="64">
                            <ToggleButton.Content>
                                <materialDesign:PackIcon
      Kind="Check" Width="40" Height="40" Foreground="ForestGreen"/>
                            </ToggleButton.Content>
                            <materialDesign:ToggleButtonAssist.OnContent>
                                ""
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>

                    </StackPanel>
                </materialDesign:TransitioningContent>-->
                    <!--#endregion-->

                    <!--#region CHOICE_GROUP-->
                    <!--<materialDesign:DialogHost CloseOnClickAway="True">
                    <materialDesign:DialogHost.DialogContent>
                        <StackPanel Margin="16">
                            <TextBlock Style="{StaticResource BaseTextDarkH3}">Input name group</TextBlock>
                            <TextBox Margin="0 8 0 0" HorizontalAlignment="Stretch" x:Name="FruitTextBox" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsDefault="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand">
                                    ACCEPT
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsCancel="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand">

                                    CANCEL
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </materialDesign:DialogHost.DialogContent>

                    <DockPanel LastChildFill="False">
                        
                        <TextBlock Style="{StaticResource BaseTextDarkH1}" VerticalAlignment="Center" Margin="0,100,0,50" HorizontalAlignment="Center" DockPanel.Dock="Top">
                        Выберите группу
                        </TextBlock>
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" DockPanel.Dock="Top">



                            <ComboBox  Style="{StaticResource MaterialDesignComboBox}" 
  materialDesign:HintAssist.Hint="Group"
  MinWidth="72"
  VerticalAlignment="Bottom"
  IsEditable="True"
  ItemsSource="{Binding LongListToTestComboVirtualization}" Foreground="Black" IsSelected="True" Width="80">
                                <ComboBox.Text>
                                    <Binding
      Path="SelectedTextTwo"
      Mode="TwoWay"
      UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:NotEmptyValidationRule
          ValidatesOnTargetUpdated="False"  />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>



                        </Grid>
                        <Button
    Style="{StaticResource MaterialDesignFlatButton}"
   
    ToolTip="MaterialDesignFlatButton" DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,50,0,0">
                            SELECT
                        </Button>

                        <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                            PlacementMode="LeftAndAlignMiddles"
    UnfurlOrientation="Horizontal"
                                 HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                 Margin="32" DockPanel.Dock="Right">
                            <materialDesign:PopupBox.ToggleContent>
                                <materialDesign:PackIcon
      Kind="Pencil"
      Width="22"
      Height="22" />
                            </materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PopupBox.ToggleCheckedContent>
                                <materialDesign:PackIcon
      Kind="Close"
      Width="22"
      Height="22" />
                            </materialDesign:PopupBox.ToggleCheckedContent>

                            <StackPanel Orientation="Horizontal">
                                <Button ToolTip="Add" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" >
                                    <materialDesign:PackIcon Kind="Plus" Height="20" Width="20" />
                                </Button>
                                <Button ToolTip="Edit">
                                    <materialDesign:PackIcon Kind="Edit" />
                                </Button>
                                <Button ToolTip="Delete" >
                                    <materialDesign:PackIcon Kind="Delete" />
                                </Button>
                            </StackPanel>
                        </materialDesign:PopupBox>
                    </DockPanel>
                </materialDesign:DialogHost>-->
                    <!--#endregion-->


                    <DockPanel Margin="0"  LastChildFill="False">
                        <TextBox
    Style="{StaticResource MaterialDesignOutlinedTextFieldTextBox}"
    Margin="20"
    VerticalAlignment="Center"
    Height="100"
    AcceptsReturn="True"
    TextWrapping="Wrap"
    VerticalScrollBarVisibility="Auto"
    materialDesign:HintAssist.Hint="This is a text area"
    IsEnabled="{Binding Path=IsChecked, ElementName=MaterialDesignOutlinedTextFieldTextBoxEnabledComboBox}" DockPanel.Dock="Top" />
                        <!--<TextBox TextWrapping="WrapWithOverflow" Style="{StaticResource BaseTextDarkH3}" Margin="20" HorizontalAlignment="Left" DockPanel.Dock="Top">Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:Что выведет на консоль следующий код:</TextBox>-->
                        <avalonEdit:TextEditor Margin="20,0,20,20"  MinHeight="16" MaxHeight="200"
                    ShowLineNumbers="True"
				Name="textEditor"
				FontFamily="Consolas"
				FontSize="10pt"
				SyntaxHighlighting="C#"
                                            HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Background="#FFFAFAFA" DockPanel.Dock="Top"
			>Welcome to AvalonEdit!

                        </avalonEdit:TextEditor>

                        <StackPanel Style="{StaticResource BaseTextDarkH3}" Margin="0,20,0,0" HorizontalAlignment="Left" DockPanel.Dock="Top" >
                            <CheckBox Margin="20,0,20,6">
                                <TextBlock TextWrapping="WrapWithOverflow">
                               public   public   public   public   public      public   public   public   public   public   public   public   public   public   publicpublic   public   public   public
                                </TextBlock>
                            </CheckBox>
                            <CheckBox Margin="20,0,20,6">
                                internal
                            </CheckBox>
                            <CheckBox Margin="20,0,20,6">
                                private
                            </CheckBox>
                            <CheckBox Margin="20,0,20,6">
                                public
                            </CheckBox>
                        </StackPanel>


                        <Button HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,20,20,20" DockPanel.Dock="Bottom" Height="31.6" Click="Button_Click_2" >NEXT</Button>

                    </DockPanel>

                    <!--#region Transitioner-->
                    <!--<materialDesign:Transitioner SelectedIndex="0" AutoApplyTransitionOrigins="True">
                    <materialDesign:Transitioner.InputBindings>
                        <KeyBinding Key="Right" Command="{x:Static materialDesign:Transitioner.MoveNextCommand}" />
                    </materialDesign:Transitioner.InputBindings>

                    -->
                    <!-- you can use a slide for each page, let's add a touch of fade for our first page  -->
                    <!--<materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect FadeIn}">-->
                    <!--
                        <local:Slide1_Intro Margin="0,0,0,0.4" />
                    -->
                    <!--</materialDesign:TransitionerSlide>-->

                    <!-- but you can use bare xaml too -->
                    <!--
                    <local:Slide2_Intro />
     <local:Slide1_Intro Margin="0,0,0,0.4" />
                    -->
                    <!-- you can control (and create your own) wipes -->
                    <!--<materialDesign:TransitionerSlide>
                        <materialDesign:TransitionerSlide.BackwardWipe>
                            <materialDesign:CircleWipe />
                        </materialDesign:TransitionerSlide.BackwardWipe>
                        <materialDesign:TransitionerSlide.ForwardWipe>
                            <materialDesign:SlideWipe Direction="Right" />
                        </materialDesign:TransitionerSlide.ForwardWipe>-->
                    <!--<local:Slide3_Intro />-->
                    <!--</materialDesign:TransitionerSlide>-->

                    <!-- now we are going to slide this in by combining some extra effects.  the inner content slides in, so we'll set the outer background and clip, to keep things nice -->
                    <!--<materialDesign:TransitionerSlide Background="{DynamicResource MaterialDesignDarkBackground}"
                                              Foreground="{DynamicResource MaterialDesignDarkForeground}"
                                              ClipToBounds="True">
                        <materialDesign:TransitionerSlide.OpeningEffects>
                            <materialDesign:TransitionEffect Kind="SlideInFromLeft" Duration="0:0:0.8" />
                            <materialDesign:TransitionEffect Kind="SlideInFromBottom" Duration="0:0:0.8" OffsetTime="0:0:0.15" />
                        </materialDesign:TransitionerSlide.OpeningEffects>-->
                    <!--<local:Slide4_CombineTransitions />-->
                    <!--</materialDesign:TransitionerSlide>-->

                    <!--<local:Slide5_TransitioningContent />

                    <local:Slide6_Origins />

                    <local:Slide7_MVVM />-->
                    <!--

                </materialDesign:Transitioner>-->
                    <!--#endregion-->

                    <!--#region TextEditor-->

                    <!--#endregion-->

                </DockPanel>

            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>

    </Grid>
</UserControl>
